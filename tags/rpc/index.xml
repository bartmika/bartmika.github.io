<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>rpc on Bartlomiej Mika</title><link>https://bartmika.github.io/tags/rpc/</link><description>Recent content in rpc on Bartlomiej Mika</description><generator>Hugo -- gohugo.io</generator><managingEditor>bart@mikasoftware.com (Bartlomiej Mika)</managingEditor><webMaster>bart@mikasoftware.com (Bartlomiej Mika)</webMaster><lastBuildDate>Thu, 13 Aug 2020 23:14:55 -0400</lastBuildDate><atom:link href="https://bartmika.github.io/tags/rpc/index.xml" rel="self" type="application/rss+xml"/><item><title>How to Write a Unit Test for a Remote Procedural Call in Golang</title><link>https://bartmika.github.io/posts/2020/how-to-write-a-unit-test-for-a-remote-procedural-call-in-golang/</link><pubDate>Thu, 13 Aug 2020 23:14:55 -0400</pubDate><author>bart@mikasoftware.com (Bartlomiej Mika)</author><guid>https://bartmika.github.io/posts/2020/how-to-write-a-unit-test-for-a-remote-procedural-call-in-golang/</guid><description>&lt;p>Recently I have been learning about &lt;strong>remote procedural calls&lt;/strong> (RPCs) in *&lt;em>Golang&lt;/em> and realized I was unable to find an easy example on how to write a unit test for RPCs. In this post, I&amp;rsquo;ll explain how I figured out a solution.&lt;/p></description></item></channel></rss>