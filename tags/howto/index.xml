<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>HOWTO on Bartlomiej Mika</title>
    <link>https://bartlomiejmika.com/tags/howto/</link>
    <description>Recent content in HOWTO on Bartlomiej Mika</description>
    <image>
      <url>https://bartlomiejmika.com/img/bartlomiej_mika.jpeg</url>
      <link>https://bartlomiejmika.com/img/bartlomiej_mika.jpeg</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 13 Mar 2022 00:39:16 -0500</lastBuildDate><atom:link href="https://bartlomiejmika.com/tags/howto/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to Write a Golang App Remotely on a Raspberry Pi Using Atom</title>
      <link>https://bartlomiejmika.com/posts/2022/how-to-write-a-golang-app-remotely-on-a-raspberry-pi-using-atom/</link>
      <pubDate>Sun, 13 Mar 2022 00:39:16 -0500</pubDate>
      
      <guid>https://bartlomiejmika.com/posts/2022/how-to-write-a-golang-app-remotely-on-a-raspberry-pi-using-atom/</guid>
      <description>&lt;p&gt;Wouldn&amp;rsquo;t it be cool to remotely program a Golang app on a Raspberry Pi? In this post, I write how to do that if you are using Atom.&lt;/p&gt;
&lt;h2 id=&#34;tldr&#34;&gt;&lt;strong&gt;TL;DR;&lt;/strong&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Setup a Raspberry Pi Device&lt;/li&gt;
&lt;li&gt;Setup Golang on that Device&lt;/li&gt;
&lt;li&gt;Install &lt;code&gt;remote-ftp&lt;/code&gt; on your Machine&lt;/li&gt;
&lt;li&gt;Connect from your Atom&lt;/li&gt;
&lt;li&gt;Write a Golang Application&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>How to Perform RSA Encryption in Javascript (React.js) and Golang</title>
      <link>https://bartlomiejmika.com/posts/2022/how-to-perform-rsa-encryption-in-javascript-and-golang/</link>
      <pubDate>Mon, 07 Feb 2022 00:45:18 -0500</pubDate>
      
      <guid>https://bartlomiejmika.com/posts/2022/how-to-perform-rsa-encryption-in-javascript-and-golang/</guid>
      <description>&lt;p&gt;Do you want your &lt;strong&gt;React.js (web)&lt;/strong&gt; frontend app talking to your &lt;strong&gt;Golang&lt;/strong&gt; backend server? In this post, I&amp;rsquo;ll explain how I got cross-devices RSA encryption working in JavaScript and Golang.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Example of Writing a Simple gRPC Server in Golang from Scratch</title>
      <link>https://bartlomiejmika.com/posts/2021/example-of-writing-a-simple-grpc-server-in-golang-from-scratch/</link>
      <pubDate>Sat, 27 Mar 2021 14:10:03 -0400</pubDate>
      
      <guid>https://bartlomiejmika.com/posts/2021/example-of-writing-a-simple-grpc-server-in-golang-from-scratch/</guid>
      <description>&lt;p&gt;How do you write a Golang server using &lt;a href=&#34;https://grpc.io/docs/languages/go/quickstart/&#34;&gt;&lt;code&gt;gRPC&lt;/code&gt;&lt;/a&gt; from scratch? Heres how to do it.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to Build an API Server in Go - Part 4: Access Control</title>
      <link>https://bartlomiejmika.com/posts/2021/how-to-build-an-api-server-in-go-part-4-access-control/</link>
      <pubDate>Sun, 31 Jan 2021 00:02:30 -0400</pubDate>
      
      <guid>https://bartlomiejmika.com/posts/2021/how-to-build-an-api-server-in-go-part-4-access-control/</guid>
      <description>&lt;p&gt;Learn how to protect API endpoints with access and refresh tokens using the third-party &lt;a href=&#34;https://github.com/dgrijalva/jwt-go&#34;&gt;jwt-go&lt;/a&gt; library.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to Build an API Server in Go - Part 3: Postgres Database</title>
      <link>https://bartlomiejmika.com/posts/2021/how-to-build-an-api-server-in-go-part-3-postgres-database/</link>
      <pubDate>Sat, 30 Jan 2021 00:02:30 -0400</pubDate>
      
      <guid>https://bartlomiejmika.com/posts/2021/how-to-build-an-api-server-in-go-part-3-postgres-database/</guid>
      <description>&lt;p&gt;The purpose of this article is to provide instructions on how to setup &lt;em&gt;postgres&lt;/em&gt; database with our application.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to Build an API Server in Go - Part 2: Simple Database</title>
      <link>https://bartlomiejmika.com/posts/2021/how-to-build-an-api-server-in-go-part-2-simple-database/</link>
      <pubDate>Fri, 29 Jan 2021 00:02:30 -0400</pubDate>
      
      <guid>https://bartlomiejmika.com/posts/2021/how-to-build-an-api-server-in-go-part-2-simple-database/</guid>
      <description>&lt;p&gt;The purpose of this post is to learn how our &lt;a href=&#34;https://bartlomiejmika.com/posts/2021/how-to-build-an-api-server-in-go-part-1-basic-server/&#34;&gt;basic API server&lt;/a&gt; can read the body of a &lt;em&gt;request&lt;/em&gt;. In addition, we will learn how to use an easy-to-use &lt;em&gt;simple database&lt;/em&gt; for beginners called &lt;a href=&#34;https://github.com/sdomino/scribble&#34;&gt;scribble&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to Build an API Server in Go - Part 1: Basic Server</title>
      <link>https://bartlomiejmika.com/posts/2021/how-to-build-an-api-server-in-go-part-1-basic-server/</link>
      <pubDate>Mon, 25 Jan 2021 00:02:30 -0400</pubDate>
      
      <guid>https://bartlomiejmika.com/posts/2021/how-to-build-an-api-server-in-go-part-1-basic-server/</guid>
      <description>&lt;p&gt;The purpose of this post is to provide instructions on how to setup a simple RESTful API server, in Golang, using only the &lt;a href=&#34;https://golang.org/pkg/net/http/&#34;&gt;&lt;em&gt;net/http&lt;/em&gt; package&lt;/a&gt; and not any other third-party web framework. You will learn how to create REST endpoints within your project that can handle &lt;strong&gt;POST&lt;/strong&gt;, &lt;strong&gt;GET&lt;/strong&gt;, &lt;strong&gt;PUT&lt;/strong&gt; and &lt;strong&gt;DELETE&lt;/strong&gt; HTTP requests. This is the first post in a multi-post series.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to Install Hugo From Git Bash for Window Users</title>
      <link>https://bartlomiejmika.com/posts/2020/how-to-install-hugo-from-git-bash-for-window-users/</link>
      <pubDate>Wed, 09 Sep 2020 22:11:07 -0400</pubDate>
      
      <guid>https://bartlomiejmika.com/posts/2020/how-to-install-hugo-from-git-bash-for-window-users/</guid>
      <description>&lt;p&gt;The purpose of this article is to help beginners understand how to do the &lt;a href=&#34;https://github.com/gohugoio/hugo#build-and-install-the-binaries-from-source-advanced-install&#34;&gt;advanced install&lt;/a&gt; of &lt;a href=&#34;https://github.com/gohugoio/hugo&#34;&gt;&lt;code&gt;hugo&lt;/code&gt;&lt;/a&gt; static site generator (SSG).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to Write a Unit Test for a Remote Procedural Call in Golang</title>
      <link>https://bartlomiejmika.com/posts/2020/how-to-write-a-unit-test-for-a-remote-procedural-call-in-golang/</link>
      <pubDate>Thu, 13 Aug 2020 23:14:55 -0400</pubDate>
      
      <guid>https://bartlomiejmika.com/posts/2020/how-to-write-a-unit-test-for-a-remote-procedural-call-in-golang/</guid>
      <description>&lt;p&gt;Recently I have been learning about &lt;strong&gt;remote procedural calls&lt;/strong&gt; (RPCs) in *&lt;em&gt;Golang&lt;/em&gt; and realized I was unable to find an easy example on how to write a unit test for RPCs. In this post, I&amp;rsquo;ll explain how I figured out a solution.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to Setup Peercoin on Raspberry Pi for Headless Minting</title>
      <link>https://bartlomiejmika.com/posts/2020/how-to-setup-peercoin-on-raspberry-pi-for-headless-minting/</link>
      <pubDate>Sun, 26 Jul 2020 12:15:15 -0400</pubDate>
      
      <guid>https://bartlomiejmika.com/posts/2020/how-to-setup-peercoin-on-raspberry-pi-for-headless-minting/</guid>
      <description>&lt;p&gt;Would you believe you can participate in cryptocurrency production using a simple Raspberry Pi computer? No need for powerful ASIC miners! Peercoin is an interesting altcoin that has &lt;strong&gt;minting&lt;/strong&gt; capability built-in, and minting is the ability to create new coins from the ones you already have. In this tutorial, you&amp;rsquo;ll learn how to set up a dedicated Raspberry Pi computer to mint the Peercoins in your wallet.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
